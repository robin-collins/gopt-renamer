name: Go Build

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go-version: [1.x]
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Check out code
        uses: actions/checkout@v2

      - name: Build
        run: go build -v -o myapp-${{ matrix.os }} ./...

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: myapp-${{ matrix.os }}
          path: myapp-${{ matrix.os }}

      - name: Create Release
        id: create_release
        if: github.event_name == 'release' && github.event.action == 'published'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        if: github.event_name == 'release' && github.event.action == 'published'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./myapp-${{ matrix.os }}
          asset_name: myapp-${{ matrix.os }}
          asset_content_type: application/octet-stream
